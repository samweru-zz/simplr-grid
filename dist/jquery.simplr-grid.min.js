/*
 * jQuery simplrGrid - v1.0.0
 * Javascript DataGrid
 *
 * Copyright (c) 2019 Samuel Weru
 * Released under the MIT license
 */
!function(p) {
    var u = {
        addRow: function(e, t, s) {
            var r = p(document.createElement("TR")), o = p(document.createElement("TD"));
            return r.append(o.html(e)), s.dblClick && r.dblclick(s.dblClick), r.click(function() {
                s.singleSelect ? p(this).addClass("selected").siblings().removeClass("selected") : p(this).hasClass("selected") ? p(this).removeClass("selected") : p(this).addClass("selected");
            }), p.each(t, function(e, t) {
                var a, n = {};
                p.isEmptyObject(s.columns) || void 0 !== (a = s.columns[e]) && a.hasOwnProperty("css") && (n = a.css || n), 
                o = p(document.createElement("TD")).attr("name", e).css(n), s.resizeColumns ? o.html(p(document.createElement("DIV")).html(t)) : o.html(t), 
                r.append(o);
            }), r;
        },
        buildBody: function(e, t, a) {
            var n = (parseInt(a.pager.page) - 1) * parseInt(a.pager.rows) + 1, s = p(document.createElement("TBODY"));
            for (idx in t) s.append(this.addRow(n++, t[idx], a));
            e.append(s);
        },
        buildHeader: function(e, t, r) {
            var o = p(document.createElement("THEAD")), a = p(document.createElement("TH"));
            return o.append(a.html("&nbsp;")), p.each(t[0], function(e, t) {
                var a, n = {}, s = "";
                p.isEmptyObject(r.columns) || r.columns.hasOwnProperty(e) && (s = (a = r.columns[e]).name || e, 
                a.hasOwnProperty("css") && a.css.hasOwnProperty("display") && "none" == a.css.display.toLowerCase().trim() && (n = {
                    display: "none"
                })), s || (s = 1 < (a = e.split("_")).length ? a.map(function(e) {
                    return e[0].toUpperCase() + e.substring(1);
                }).join(" ") : e[0].toUpperCase() + e.substring(1)), o.append(p(document.createElement("TH")).attr("name", e).html(s).css(n));
            }), 0 < t.length && (e.append(o), !0);
        },
        addToolbar: function(e) {
            var a = p(document.createElement("DIV"));
            return a.addClass("simplr-grid-toolbar"), p.each(e, function(e, t) {
                a.append(t);
            }), a;
        },
        buildPager: function(e, t) {
            var a = p(document.createElement("INPUT"));
            a.val(t.pager.page), a.addClass("page-num").attr("size", 2);
            var n = p(document.createElement("SELECT"));
            p.each(t.pager.list, function(e, t) {
                p(n).append(new Option(t));
            }), n.change(function() {
                t.pager.page = 1, t.pager.rows = p(this).val(), a.val(t.pager.page), u.loader(e, t, u.rebuildBody);
            });
            var s = p(document.createElement("BUTTON")).addClass("sg-first").html("&#171;").attr("title", "First");
            s.click(function() {
                1 != t.pager.page && (t.pager.page = 1, a.val(t.pager.page), u.loader(e, t, u.rebuildBody));
            });
            var r = p(document.createElement("BUTTON")).addClass("sg-prev").html("&#8249;").attr("title", "Previous");
            r.click(function() {
                1 < t.pager.page && (t.pager.page--, a.val(t.pager.page), u.loader(e, t, u.rebuildBody));
            });
            var o = p(document.createElement("BUTTON")).addClass("sg-next").html("&#8250;").attr("title", "Next");
            o.click(function() {
                t.pager.page < t.pager.pages && (t.pager.page++, a.val(t.pager.page), u.loader(e, t, u.rebuildBody));
            });
            var i = p(document.createElement("BUTTON")).addClass("sg-last").html("&#187;").attr("title", "Last");
            i.click(function() {
                t.pager.page != t.pager.pages && (t.pager.page = t.pager.pages, a.val(t.pager.page), 
                u.loader(e, t, u.rebuildBody));
            });
            var l = p(document.createElement("BUTTON")).addClass("sg-refresh").html("&#8634;").attr("title", "Refresh");
            l.click(function() {
                t.pager.page = e.parent().parent().find(".page-num").val(), u.loader(e, t, u.rebuildBody);
            });
            var d = "&nbsp;|&nbsp;", c = p(document.createElement("SPAN"));
            return c.addClass("num-of-pages"), c.html(t.pager.pages), this.addToolbar([ n, d, s, r, "<span> Page </span>", a, "<span> of </span>", c, "<span>&nbsp;</span>", o, i, d, l ]);
        },
        buildToolbars: function(a, e, t) {
            var n = p(document.createElement("DIV"));
            n.addClass("simplr-grid-capsule"), n.css({
                width: t.css.capsuleWidth
            }), a.css({
                width: t.css.gridWidth
            });
            var s = a.data("options");
            a.replaceWith(n), //replace erases options
            a.data("options", s), a.bind("refresh", function(e, t) {
                console.log(t);
                t = p.extend(a.data("options"), t);
                u.loader(a, t, u.rebuildBody);
            });
            var r = p(document.createElement("DIV"));
            r.addClass("simplr-grid-title"), r.html("&nbsp;".concat(t.title));
            s = p(document.createElement("DIV"));
            s.addClass("simplr-grid-inner"), s.css({
                height: t.css.gridHeight
            }), n.append(r), p.each(t.toolbars, function(e, t) {
                n.append(u.addToolbar(t));
            }), t.usePager && n.append(u.buildPager(a, t)), n.append(s), s.append(a);
        },
        disableToolbar: function(e, t) {
            var a, n = e.parent().prev();
            n.find(".sg-last, .sg-next, .sg-prev, .sg-first, .page-num, select").attr("disabled", t), 
            t ? (a = p("<div>").addClass("msg-outer"), t = p("<div>").addClass("msg-inner").html("No Data"), 
            e.parent().not(":has(.msg-outer)").append(a.append(t)), 
            // toolbar.find(".page-num").val("") <-- never uncomment this loader will not load data
            n.find(".num-of-pages").html("#")) : e.parent().find(".msg-outer").remove();
        },
        build: function(e, t, a) {
            u.buildToolbars(e, t, a), 0 < t.rows.length ? (u.buildHeader(e, t.rows, a), u.buildBody(e, t.rows, a), 
            u.doPlugins(e, a), u.disableToolbar(e, !1)) : u.disableToolbar(e, !0);
        },
        rebuildBody: function(e, t, a) {
            e.find("thead").remove(), e.find("tbody").remove(), setTimeout(function() {
                0 < t.rows.length ? (u.buildHeader(e, t.rows, a), u.buildBody(e, t.rows, a), u.doPlugins(e, a), 
                e.parent().parent().find(".num-of-pages").html(a.pager.pages), u.disableToolbar(e, !1)) : u.disableToolbar(e, !0);
            }, 100);
        },
        doPlugins: function(e, t) {
            t.fixHeader && e.fixHeader(), t.fixLeftColumn ? e.fixLeftColumn() : e.parent().css({
                overflow: "auto"
            }), t.resizeColumns && e.resizeColumns();
        },
        nativeLoader: function(t, a, n) {
            p.ajax({
                type: a.method,
                dataType: "json",
                // fake: true,	// <<<---- that's it !
                url: a.url,
                data: {
                    page: a.pager.page,
                    rows: a.pager.rows
                }
            }).done(function(e) {
                //total-number-of-rows/rows-per-page
                a.pager.pages = Math.ceil(e.count / a.pager.rows), n(t, e, a);
            });
        },
        loader: function(e, t, a) {
            e.addClass("simplr-grid"), 0 < t.data.length ? (a(e, {
                rows: t.data,
                count: t.data.length
            }, t), u.doPlugins(e, t)) : t.customLoader ? t.customLoader(e, t, a) : u.nativeLoader(e, t, a);
        }
    };
    p.fn.simplrGrid = function(e) {
        return e = p.extend(!0, {}, {
            title: "Simplr Grid",
            toolbars: [],
            columns: {},
            pager: {
                page: 1,
                rows: 10,
                list: [ 50, 40, 30, 20, 10 ]
            },
            css: {},
            data: [],
            method: "POST",
            singleSelect: !0,
            dblClick: null,
            customLoader: null,
            usePager: !1,
            fixHeader: !1,
            fixLeftColumn: !1,
            resizeColumns: !1
        }, e), this.data("options", e), this.each(function() {
            u.loader(p(this), e, u.build);
        });
    }, p.fn.getRow = function(e) {
        var a = {};
        return p(this).has("td").find("td:not(:first-child)").each(function(e, t) {
            t = p(t).attr("name");
            val = (p(this).has("div").length ? p(this).find("div") : p(this)).html(), a[t] = val;
        }), a;
    }, p.fn.getSelectedRow = function() {
        return p(this).find("tr.selected:first").getRow();
    }, p.fn.getSelectedRows = function() {
        var a = [];
        return p.each(p(this).find("tr.selected"), function(e, t) {
            a.push(p(t).getRow());
        }), a;
    }, p.fn.fixHeader = function() {
        return this.each(function() {
            var e, t;
            e = p(this), (t = e.parent()).append(e), t.css({
                "overflow-x": "auto",
                "overflow-y": "auto"
            }), t.scroll(function() {
                var e = t.scrollTop();
                p(this).find("thead > *").css("top", e);
            }.bind(e)), p(this).find("thead > *").css({
                position: "relative"
            });
        });
    }, p.fn.fixLeftColumn = function() {
        var i = {
            left: 1
        };
        return this.each(function() {
            var t, e;
            e = p(this), (t = e.parent()).append(e), t.css({
                "overflow-x": "auto",
                "overflow-y": "auto"
            }), t.scroll(function() {
                var e = t.scrollLeft();
                0 < i.left && i.leftColumns.css("left", e);
            }.bind(e)), e = p(this), i.leftColumns = p(), e.find("tr").each(function(e, t) {
                !function(e, t) {
                    for (var a = i.left, n = 1, s = 1; s <= a; s += n) {
                        var r = 1 < n ? s - 1 : s, o = p(e).find("> *:nth-child(" + r + ")"), r = o.prop("colspan");
                        t(o), n = r;
                    }
                }(t, function(e) {
                    i.leftColumns = i.leftColumns.add(e);
                });
            }), i.leftColumns.each(function(e, t) {
                (t = p(t)).css({
                    position: "relative"
                });
            }), p(this).parent().trigger("scroll"), p(window).resize(function() {
                p(this).parent().trigger("scroll");
            });
        });
    }, p.fn.resizeColumns = function() {
        return this.each(function() {
            var t, a, n = !1, s = void 0;
            0 == p(this).find("th:last-child").has("span").length && p(this).find("th:not(:first-child)").append("<span>&nbsp;</span>"), 
            p(this).find("th span").mousedown(function(e) {
                s = p(this).parent(), n = !0, t = e.pageX, a = s.width();
            }), p(document).mousemove(function(e) {
                n && p(s).width(a + (e.pageX - t));
            }), p(document).mouseup(function() {
                n = n && !1;
            });
        });
    };
}(jQuery);